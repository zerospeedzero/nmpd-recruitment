[{"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/_app.js":"1","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/_document.js":"2","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/about.js":"3","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/api/hello.js":"4","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/index.js":"5","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/test.js":"6","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/types/[id].js":"7","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/types/index.js":"8","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Footer.js":"9","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Header.js":"10","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Layout.js":"11","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Test.js":"12","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TestData.js":"13","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Type.js":"14","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypeLink.js":"15","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypesData.js":"16","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypesData copy.js":"17","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/lib/ga/gtag.js":"18"},{"size":1372,"mtime":1667494853514,"results":"19","hashOfConfig":"20"},{"size":2027,"mtime":1667456201706,"results":"21","hashOfConfig":"20"},{"size":3780,"mtime":1669103803792,"results":"22","hashOfConfig":"20"},{"size":170,"mtime":1666729916796,"results":"23","hashOfConfig":"20"},{"size":2282,"mtime":1668059063059,"results":"24","hashOfConfig":"20"},{"size":95,"mtime":1666729916796,"results":"25","hashOfConfig":"20"},{"size":967,"mtime":1666746192422,"results":"26","hashOfConfig":"20"},{"size":1012,"mtime":1669097898964,"results":"27","hashOfConfig":"20"},{"size":2643,"mtime":1669103257371,"results":"28","hashOfConfig":"20"},{"size":3184,"mtime":1669104105803,"results":"29","hashOfConfig":"20"},{"size":747,"mtime":1668951449067,"results":"30","hashOfConfig":"20"},{"size":10423,"mtime":1669098898835,"results":"31","hashOfConfig":"20"},{"size":1632,"mtime":1669102794848,"results":"32","hashOfConfig":"20"},{"size":7753,"mtime":1669010731732,"results":"33","hashOfConfig":"20"},{"size":798,"mtime":1669098376834,"results":"34","hashOfConfig":"20"},{"size":1433,"mtime":1667970983727,"results":"35","hashOfConfig":"20"},{"size":1433,"mtime":1667970983727,"results":"36","hashOfConfig":"20"},{"size":511,"mtime":1667456374796,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wp60eg",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/_app.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/_document.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/about.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/api/hello.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/index.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/test.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/types/[id].js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/pages/types/index.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Footer.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Header.js",["75","76","77","78","79","80"],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Layout.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Test.js",["81"],"import { TestData } from \"./TestData\"\nimport { useState, useEffect } from \"react\"\nimport styles from '../styles/test.module.css'\nimport { useRouter } from 'next/router'\nimport { motion } from 'framer-motion'\nimport * as MdIcons from 'react-icons/md'\nimport useTranslation from \"next-translate/useTranslation\"\n\nexport default function Test() {\n    const router = useRouter()\n    let { t } = useTranslation()\n\n    const [i,setI] = useState(0)\n    const [score,setScore] = useState(555)\n    const [vidSource, setVidSource] = useState(null)\n    const [answer, setAnswer] = useState(1)\n    const [time,setTime] = useState(null)\n    const [interv, setInterv] = useState(null)\n    const [tout, setTout] = useState(null)\n    const [init,setInit] = useState(false)\n    const [mute,setMute] = useState(true)\n\n    const [width, setWidth] = useState(0)\n    useEffect(() => {\n        setWidth(window.screen.width)\n    }, [])\n\n    const variants = {\n        initial: { opacity:0 },\n        animate: {\n            opacity: 1,\n            transition: {\n                duration: 1\n            }\n        }\n    }\n\n    var intel = score % 10\n    var dream = (score - intel)/10 % 10\n    var extro = (score - (dream*10 + intel))/100\n\n    useEffect(() => {\n        var video = document.getElementById('video')\n        if (vidSource) {\n            video.onloadedmetadata = function() {\n                setTout(setTimeout(() => setInit(false),(video.duration-1)*1000))\n                setInterv(setInterval(() => {\n                    setTime(parseInt(video.duration-video.currentTime))\n                },1000))\n            }\n        } else {\n            setInit(true)\n            clearInterval(interv)\n            setInterv(null)\n        }\n    }, [vidSource])\n    console.log('Total score: ' + score);\n    console.log('intel score: ' + intel);\n    console.log('dream score: ' + dream);\n    console.log('extro score: ' + extro);\n    if (i == 6 ) {\n        if ( intel < 5 ) {\n            if ( dream < 5 ) {\n                if ( extro < 5) {\n                    router.push('/types/pm')\n                } else {\n                    router.push('/types/ad')\n                }\n            } else {\n                if ( extro < 5 ) {\n                    router.push('/types/pm')\n                } else {\n                    router.push('/types/ia')\n                }\n            }\n        } else {\n            if ( dream < 5 ) {\n                if ( extro < 5 ) {\n                    router.push('/types/ad')\n                } else {\n                    router.push('/types/vt')\n                }\n            } else {\n                if ( extro < 5 ) {\n                    router.push('/types/vt')\n                } else {\n                    router.push('/types/ia')\n                }\n            }\n        }\n        return null\n    } else {\n        return (\n            <motion.div className={styles.Test}\n                animate={{backgroundColor: TestData[i].bgColor}}\n                transition={{duration: 1}}>\n                <motion.div\n                    variants={variants}\n                    initial='initial'\n                    animate={ init ? 'animate' : 'initial'}\n                    transition={{duration: 1}}\n                    className={styles.Progress}>\n                    {vidSource ? <>\n                                    <div className={styles.Controller} \n                                        onClick={() => {\n                                            setInit(false)\n                                            clearTimeout(tout)\n                                            setTimeout(() => {\n                                                setI(i+1)\n                                                setVidSource(null)                                            \n                                                setTime(null)\n                                            },1000)}}>skip</div>\n                                    <div className={styles.Controller}>\n                                        {time}\n                                    </div>\n                                    <div className={styles.Controller}\n                                        onClick={() => {\n                                            video.muted = !mute\n                                            setMute(!mute)}}>{mute ? <MdIcons.MdVolumeOff /> : <MdIcons.MdVolumeUp />}</div>\n                                </> :\n                                TestData.map((question,index) => {\n                                    return <div key={index}\n                                            style={i >= index ? {backgroundColor: 'white'}: null}\n                                            className={styles.ProgressStep}></div>\n                                })\n                    }\n                </motion.div>\n                { width > 500 && vidSource ? null : <motion.div\n                    variants={variants}\n                    initial='initial'\n                    animate={ init ? 'animate' : 'initial'}\n                    transition={{duration: 1}}\n                    className={styles.TextRow}>\n                    {/* <div className={styles.Question}>\n                        {t(\"test:\" + TestData[i].question)}\n                    </div> */}\n                    {/* Question animation */ }\n                    <video src={TestData[i].question_animation}\n                        id='video1'\n                        className={styles.Video}\n                        // style={{width: '100vw', objectFit: 'cover'}}                                    \n                        style={{width: '100vw' }}                                    \n                        autoPlay\n                        muted={mute}\n                        onEnded={() => {\n                        // setI(i+1)\n                        // setVidSource(null)\n                        // setTime(null)\n                        }}\n                    />\n                </motion.div>}\n                { width > 500 && vidSource ? null : <motion.div\n                    variants={variants}\n                    initial='initial'\n                    // animate={ init ? 'animate' : 'initial'}\n                    animate={{\n                        scale: [1, 1.5, 3, 1.5, 1],\n                        rotate: [0, 10, 0, -10, 0],\n                        borderRadius: [\"20%\", \"20%\", \"50%\", \"50%\", \"20%\"],\n                        opacity:1                     \n                    }}\n                    transition={{duration: 5}}\n                    className={styles.bottom_question}>\n                    <div style={{color: TestData[i].Color}} className={styles.Question}>\n                        {t(\"test:\" + TestData[i].question)}\n                    </div>\n                </motion.div>}\n\n                { width < 500 ? <motion.div\n                    variants={variants}\n                    initial='initial'\n                    animate={ init ? 'animate' : 'initial'}\n                    transition={{duration: 1}}\n                    className={styles.Row}>\n                    { vidSource ? <video src={vidSource}\n                                    id='video'\n                                    className={styles.Video}\n                                    style={{width: '100vw', objectFit: 'cover'}}                                    \n                                    autoPlay\n                                    muted={mute}\n                                    onEnded={() => {\n                                        setI(i+1)\n                                        setVidSource(null)\n                                        setTime(null)\n                                    }} />: null }\n                </motion.div> : vidSource ? <video src={vidSource}\n                                    id='video'\n                                    className={styles.Video}\n                                    style={{width: '100vw', objectFit: 'cover'}}                                    \n                                    autoPlay\n                                    muted={mute}\n                                    onEnded={() => {\n                                        setI(i+1)\n                                        setVidSource(null)\n                                        setTime(null)\n                                    }} /> : null }\n                { width > 500 && vidSource ? null : <motion.div\n                    variants={variants}\n                    initial='initial'\n                    animate={ init ? 'animate' : 'initial'}\n                    transition={{duration: 1}}\n                    className={styles.TextRow}>\n                    { vidSource ? \n                        <motion.button\n                            className={styles.Answer}\n                            // whileHover={{ scale: 1.3 }}\n                            animate={answer == 1 ? {backgroundColor: 'white', color: TestData[i].bgColor} : null}\n                            transition={{duration: 1}}>\n                            {t(\"test:\" + TestData[i].answer1[0])}\n                        </motion.button> :\n                        <button\n                            className={styles.Answer}\n                            onClick={() => {\n                                setAnswer(1)\n                                setScore(score + TestData[i].answer1[1])\n                                setVidSource(TestData[i].answer1[2])}}>\n                            {t(\"test:\" + TestData[i].answer1[0])}\n                        </button> }\n                    { vidSource ? \n                        <motion.button\n                            className={styles.Answer}\n                            animate={answer == 2 ? {backgroundColor: 'white', color: TestData[i].bgColor} : null}\n                            transition={{duration: 1}}>\n                            {t(\"test:\" + TestData[i].answer2[0])}\n                        </motion.button> :\n                        <button\n                            className={styles.Answer}\n                            onClick={() => {\n                                setAnswer(2)\n                                setScore(score + TestData[i].answer2[1])\n                                setVidSource(TestData[i].answer2[2])}}>\n                            {t(\"test:\" + TestData[i].answer2[0])}\n                        </button> }\n                </motion.div>}\n            </motion.div>\n        )\n    }\n}","/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TestData.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/Type.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypeLink.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypesData.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/components/TypesData copy.js",[],"/Users/ghost/Documents/sait/production_company1/assignments/assignment4/website/nmpd-recruitment/lib/ga/gtag.js",[],{"ruleId":"82","severity":1,"message":"83","line":47,"column":21,"nodeType":"84","endLine":47,"endColumn":64},{"ruleId":"82","severity":1,"message":"83","line":51,"column":17,"nodeType":"84","endLine":51,"endColumn":60},{"ruleId":"82","severity":1,"message":"83","line":54,"column":17,"nodeType":"84","endLine":54,"endColumn":59},{"ruleId":"82","severity":1,"message":"83","line":57,"column":17,"nodeType":"84","endLine":57,"endColumn":59},{"ruleId":"82","severity":1,"message":"83","line":60,"column":17,"nodeType":"84","endLine":60,"endColumn":59},{"ruleId":"82","severity":1,"message":"83","line":63,"column":17,"nodeType":"84","endLine":63,"endColumn":59},{"ruleId":"85","severity":1,"message":"86","line":56,"column":8,"nodeType":"87","endLine":56,"endColumn":19,"suggestions":"88"},"@next/next/link-passhref","passHref is missing. See https://nextjs.org/docs/messages/link-passhref","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'interv'. Either include it or remove the dependency array.","ArrayExpression",["89"],{"desc":"90","fix":"91"},"Update the dependencies array to be: [interv, vidSource]",{"range":"92","text":"93"},[1724,1735],"[interv, vidSource]"]